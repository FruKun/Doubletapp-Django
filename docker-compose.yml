services:
  postgres:
    image: postgres:17.4
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres:/var/lib/postgresql/data
  django-bot:
    image: $IMAGE_APP
    build: .
    expose:
      - $PORT
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    command: bash -c "python manage.py run_bot"
  django-web:
    image: $IMAGE_APP
    build: .
    expose:
      - $PORT
    environment:
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    volumes:
      - static:/app/static
      - media:/app/media
    command: bash -c "python manage.py migrate && python manage.py collectstatic --no-input && gunicorn config.wsgi --bind 0.0.0.0:8000"
  nginx:
    image: $IMAGE_NGINX
    build: nginx/.
    ports:
      - 6000:80
    env_file:
      - .env
    volumes:
      - static:/src/static
      - media:/src/media

volumes:
  postgres:
  static:
  media:
